name: 'Terraform Pull Request'

on:
  workflow_call:
    inputs:
      terraform-version:
        required: false
        type: string

permissions:
  contents: write
  packages: read

jobs:
  pre-configuration:
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout Repository'
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref || github.ref_name }}

    - name: 'Find Terraform Changes'
      id: find-folders
      run: |
        FOLDERS=$(git diff --name-only HEAD^ HEAD | grep '\.tf$' | xargs -I {} dirname {} | sort -u | tr '\n' ' ')
        CORE_FOLDERS=$(echo "$FOLDERS" | grep -E '^./core-services/' | sort -u | tr '\n' ', ' | sed 's/, $//')
        APP_FOLDERS=$(echo "$FOLDERS" | grep -E '^./applications/' | sort -u | tr '\n' ', ' | sed 's/, $//')
        echo "core_folders=$CORE_FOLDERS" >> "$GITHUB_OUTPUT"
        echo "app_folders=$APP_FOLDERS" >> "$GITHUB_OUTPUT"

    - name: 'Check if no changes'
      run: |
        if [ -z "$CORE_FOLDERS" ] || [ -z "$APP_FOLDERS" ]; then
          echo "No Terraform changes found"
          exit 1
        fi

    - name: 'Check Core Services Folders'
      run: |
        INVALID_CORE_FOLDERS=$(echo "${CORE_FOLDERS}" | tr ', ' '\n' | grep -Ev '^./core-services/[0-9]')
        if [ -n "$INVALID_CORE_FOLDERS" ]; then
          echo "All core services folders must be named with a number prefix"
          echo "Invalid Core Services Folders: $INVALID_CORE_FOLDERS"
          exit 1
        fi

    - name: 'Check Application Folders'
      run: |
        INVALID_APP_FOLDERS=$(echo "${APP_FOLDERS}" | tr ', ' '\n' | grep -Ev '^./applications/[0-9]')
        if [ -n "$INVALID_APP_FOLDERS" ]; then
          echo "All application folders must be named with a number prefix"
          echo "Invalid Application Folders: $INVALID_APP_FOLDERS"
          exit 1
        fi

    - name: 'Terraform Folders'
      run: |
        echo "This action will use these Terraform folders: ${{ steps.find-folders.outputs.folders }}"

    outputs:
      core_folders: ${{ steps.find-folders.outputs.core_folders }}
      app_folders: ${{ steps.find-folders.outputs.app_folders }}

  terraform-formatting:
    container: 
      image: ghcr.io/ukhsa-internal/devops-terraform-ci:latest
    runs-on: ubuntu-latest
    needs: [ pre-configuration ]
    
    steps:
    - name: 'Checkout Repository'
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref || github.ref_name }}

    - name: 'Setup Terraform'
      uses: ukhsa-internal/devops-github-reusable-workflows/.github/actions/setup-terraform@main
      with:
        terraform-version: ${{ github.event.inputs.terraform-version }}

    - name: 'Terraform Format'
      run: terraform fmt

    - name: 'Terraform Lint'
      run: tflint --recursive --config "$(pwd)/.tflint.hcl"

    - name: 'Terraform Docs'
      run: terraform-docs markdown table --output-file README.md --output-mode inject "$(pwd)"

    - name: Check for changes
      id: git-status
      run: |
        git config --global --add safe.directory "$(pwd)"
        if [ -n "$(git status --porcelain)" ]; then
          echo "dirty=true" >> "$GITHUB_OUTPUT"
        else
          echo "dirty=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Commit and push changes
      if: ${{ steps.git-status.outputs.dirty }} == 'true'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add -A
        git commit -m "[automated] Terraform formatting and documentation updates"
        git push

  terraform-checks:
    container: 
      image: ghcr.io/ukhsa-internal/devops-terraform-ci:latest
    runs-on: ubuntu-latest
    needs: [ pre-configuration, terraform-formatting ] 
    
    steps:
    - name: 'Checkout Repository'
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref || github.ref_name }}

    - name: 'Setup Terraform'
      uses: ukhsa-internal/devops-github-reusable-workflows/.github/actions/setup-terraform@main
      with:
        terraform-version: ${{ github.event.inputs.terraform-version }}

    - name: 'Checkov Scan'
      run: checkov -d . --quiet --compact

  terraform-run:
    container: 
      image: ghcr.io/ukhsa-internal/devops-terraform-ci:latest
    runs-on: ubuntu-latest
    needs: [ pre-configuration, terraform-formatting, terraform-checks ]
    
    steps:
    - name: 'Checkout Repository'
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref || github.ref_name }}

    - name: 'Setup Terraform'
      uses: ukhsa-internal/devops-github-reusable-workflows/.github/actions/setup-terraform@main
      with:
        terraform-version: ${{ github.event.inputs.terraform-version }}

    - name: 'Terraform Plan'
      run: terraform plan -no-color -input=false
