name: "[CI] Deploy Terraform stacks"
on:
  workflow_call:
    inputs:
      environment_name:
        required: false
        default: dev
        type: string
      aws_region:
        required: false
        default: eu-west-2
        type: string
      destructive_action_check:
        required: false
        type: boolean
        default: false
      checkov_deep_scan:
        required: false
        type: boolean
        default: false
      execute_terraform_plan:
        required: false
        type: string
        default: "apply"
      destroy_before_apply:
        required: false
        type: boolean
      repo:
        required: false
        type: string
        default: ${{ github.repository }}
        description: "Specify the org/repo of the repo containing Terraform code. Normally left blank to clone calling repo."
      ref:
        required: false
        type: string
        default: ${{ github.ref }}
        description: "Specify the branch of the Terraform code. Normally left blank to use calling ref."

    secrets:
      AWS_ROLE_NAME:
        required: false
      AWS_ACCOUNT_ID:
        required: false
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      AZURE_SUBSCRIPTION_ID:
        required: false
      AZURE_TENANT_ID:
        required: false
      AZURE_CLIENT_ID:
        required: false
      AZURE_RESOURCE_GROUP_NAME:
        required: false
      TF_MODULES_SSH_DEPLOY_KEY:
        required: false
        description: "The SSH key used to clone Terraform modules downloaded as part of the Terraform init"
      REPO_SSH_DEPLOY_KEY:
        required: false
        description: "The SSH key used to checkout private remote repos"
      SSH_DEPLOY_KEY:
        required: false
        description: "Deprecated: Use either TF_MODULES_SSH_DEPLOY_KEY or REPO_SSH_DEPLOY_KEY instead."
        
jobs:
  define_matrix:
    name: Define directory matrix for build
    runs-on: ubuntu-latest
    outputs:
      directories: "${{ steps.directories.outputs.json_directory_list }}"
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}
          ssh-key: ${{ secrets.REPO_SSH_DEPLOY_KEY }}
      - name: Determine order to run Terraform stacks
        uses: >-
          UKHSA-Internal/devops-github-actions/.github/actions/terraform-dependency-sort@main
        id: directories

  check:
    name: Lint and SAST Scan Terraform code
    uses: ./.github/workflows/terraform-code-check.yml
    needs:
      - define_matrix
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.define_matrix.outputs.directories) }}
    with:
      stack_root_directory: "${{ matrix.directory }}"

  apply:
    name: "Run Terraform for directories"
    uses: ./.github/workflows/terraform-core.yml
    needs:
      - define_matrix
      - check
    with:
      environment_name: ${{ inputs.environment_name }}
      aws_region: ${{ inputs.aws_region }}
      repo: ${{ inputs.repo }}
      ref:  ${{ inputs.ref }}
      directories: "${{ needs.define_matrix.outputs.directories }}"
      destructive_action_check: ${{ inputs.destructive_action_check }}
      terraform_action: "apply"
      execute_terraform_plan: ${{ inputs.execute_terraform_plan }}
    secrets: inherit

  post-deployment-qa-checks:
    name: Run post deployment QA checks.
    uses: ./.github/workflows/terraform-post-deployment-qa.yml
    needs: apply
    with:
      environment_name: ${{ inputs.environment_name }}
      aws_region: ${{ inputs.aws_region }}
    secrets: inherit
