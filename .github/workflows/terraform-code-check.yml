name: "[Analysis] Check Terraform Code"
on:
  workflow_call:
    inputs:
      tflint_module_scan:
        required: false
        type: boolean
        default: false

jobs:
  define_matrix:
    name: Define directory matrix for build
    if: ${{ inputs.tflint_module_scan == "true" }}
    runs-on: ubuntu-latest
    outputs:
      directories: "${{ steps.directories.outputs.json_directory_list }}"
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}
          ssh-key: ${{ secrets.REPO_SSH_DEPLOY_KEY }}
      - name: Determine order to run Terraform stacks
        uses: >-
          UKHSA-Internal/devops-github-actions/.github/actions/terraform-dependency-sort@main
        id: directories

  stack-checks:
    name: "Checks for ${{ matrix.directory }}"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ukhsa-internal/devops-terraform-ci:latest
    defaults:
      run:
        shell: bash
    needs:
      - define_matrix
    strategy:
      matrix:
        directory: "${{ fromJSON(needs.define_matrix.outputs.directories) }}"
      max-parallel: 1
    steps:
      - uses: actions/checkout@v4

      - name: Terraform Linting with tflint
        id: tf_lint
        if: ${{ inputs.tflint_module_scan == "true" }}
        continue-on-error: true
        uses: UKHSA-Internal/devops-github-actions/.github/actions/terraform-tflint@feature/DOE-237-csp-tf-lint-ruleset
        with:
          tflint_module_scan: "true"


  recursive-checks:
    name: Lint and Scan Terraform code
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ukhsa-internal/devops-terraform-ci:latest
    steps:
      - uses: actions/checkout@v4

      - name: Create pending check
        uses: UKHSA-Internal/devops-github-actions/.github/actions/github-status-check@main
        id: create_check
        with:
          name: "terraform-checks"
          status: "in_progress"
          title: "Terraform code checks"
          summary: "Terraform code checks are currently in-progress"
          details: |
            | Check              | Status                             |
            | :----------------: | :--------------------------------: |
            | Terraform Format   |  :hourglass_flowing_sand: Pending  |
            | Terraform Linting  |  :hourglass_flowing_sand: Pending  |
            | Checkov Scan       |  :hourglass_flowing_sand: Pending  |

      - name: Terraform Formatting
        id: tf_fmt
        continue-on-error: true
        run: terraform fmt --recursive --check

      - name: Terraform Linting with tflint
        id: tf_lint
        if: ${{ inputs.tflint_module_scan == "false" }}
        continue-on-error: true
        uses: UKHSA-Internal/devops-github-actions/.github/actions/terraform-tflint@feature/DOE-237-csp-tf-lint-ruleset

      - name: SAST Scan Terraform code
        id: tf_scan
        uses: UKHSA-Internal/devops-github-actions/.github/actions/terraform-checkov-scan@main

      - name: Check step status
        shell: bash
        run: |
          if [[ "${{ steps.tf_fmt.outcome }}" == "success" && "${{ steps.tf_lint.outcome }}" == "success" && "${{ steps.tf_scan.outcome }}" == "success" ]]; then
              echo "job_status=success" >> $GITHUB_ENV
          else
              echo "job_status=failure" >> $GITHUB_ENV
          fi

          # Update the individual checks
          tf_fmt=":white_check_mark: Passed" 
          tf_lint=":white_check_mark: Passed"
          tf_scan=":white_check_mark: Passed"
          [[ "${{ steps.tf_fmt.outcome }}" != "success" ]] && tf_fmt=":heavy_exclamation_mark: Failed"
          [[ "${{ steps.tf_lint.outcome }}" != "success" ]] && tf_lint=":heavy_exclamation_mark: Failed"
          [[ "${{ steps.tf_scan.outcome }}" != "success" ]] && tf_scan=":heavy_exclamation_mark: Failed"

          echo "tf_fmt=$tf_fmt" >> $GITHUB_ENV
          echo "tf_lint=$tf_lint" >> $GITHUB_ENV
          echo "tf_scan=$tf_scan" >> $GITHUB_ENV

      - name: Update check with result
        uses: UKHSA-Internal/devops-github-actions/.github/actions/github-status-check@main
        with:
          name: "terraform-checks"
          status: "completed"
          title: "Terraform code checks"
          summary: "Terraform code checks have completed"
          conclusion: "${{ env.job_status }}"
          check-run-id: ${{ steps.create_check.outputs.check-run-id }}
          details: |
            | Check              | Status              |
            | :----------------- | :-----------------: |
            | Terraform Format   |  ${{ env.tf_fmt }}  |
            | Terraform Linting  |  ${{ env.tf_lint }} |
            | Checkov Scan       |  ${{ env.tf_scan }} |

      - name: End of Workflow
        shell: bash
        if: always()
        run: |
          if [[ ${{ env.job_status }} == 'success' ]]; then
            exit 0
          else
            exit 1
          fi