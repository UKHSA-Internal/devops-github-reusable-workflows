name: "[Analysis] Check Terraform Code"
on:
  workflow_call:
    inputs:
      stack_root_directory:
        required: true
        description: "The root of the stack to run the Terraform code check in"
        type: string
      repo:
        required: false
        type: string
        default: ${{ github.repository }}
        description: "Specify the org/repo of the repo containing Terraform code. Normally left blank to clone calling repo."
      ref:
        required: false
        type: string
        default: ${{ github.ref }}
        description: "Specify the branch of the Terraform code. Normally left blank to use calling ref."
    secrets:
      TF_MODULES_SSH_DEPLOY_KEY:
        required: false
        description: "The SSH key used to clone Terraform modules downloaded as part of the Terraform init"
      REPO_SSH_DEPLOY_KEY:
        required: false
        description: "The SSH key used to clone the repo containing the Terraform stacks"

jobs:
  recursive-checks:
    name: Lint and Scan Terraform code
    runs-on: ubuntu-latest        
    container:
      image: ghcr.io/ukhsa-internal/devops-terraform-ci:latest
    steps:

      # Temporary - to go in base image
      - run: apt-get update && apt-get install openssh-client -y

      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}
          ssh-key: ${{ secrets.REPO_SSH_DEPLOY_KEY }}
  
      - name: Create pending check
        uses: UKHSA-Internal/devops-github-actions/.github/actions/github-status-check@main
        id: create_check
        with:
          name: "terraform-checks"
          status: "in_progress"
          title: "Terraform code checks"
          summary: "Terraform code checks are currently in-progress"
          details: |
            | Check              | Status                             |
            | :----------------: | :--------------------------------: |
            | Terraform Format   |  :hourglass_flowing_sand: Pending  |
            | Terraform Linting  |  :hourglass_flowing_sand: Pending  |
            | Checkov Scan       |  :hourglass_flowing_sand: Pending  |

      - name: Find Terraform version
        uses: UKHSA-Internal/devops-github-actions/.github/actions/parse-terraform-version@main
        id: terraform_version
        continue-on-error: true
        with:
          tf_file: "${{ inputs.stack_root_directory }}/terraform.tf"

      - name: Use correct Terraform version
        run: tfenv use ${{ steps.terraform_version.outputs.tf_version }}
        working-directory: ${{ inputs.stack_root_directory }}
    
      - name: Terraform Formatting
        id: tf_fmt
        continue-on-error: true
        run: terraform fmt --recursive --check
        working-directory: ${{ inputs.stack_root_directory }}

      - name: Terraform Linting with tflint
        id: tf_lint
        continue-on-error: true
        uses: UKHSA-Internal/devops-github-actions/.github/actions/terraform-tflint@main
        with:
          tf_directory: ${{ inputs.stack_root_directory }}

      - name: SAST Scan Terraform code
        id: tf_scan
        uses: UKHSA-Internal/devops-github-actions/.github/actions/terraform-checkov-scan@main
        with:
          scan_directory: ${{ inputs.stack_root_directory }}

      - name: Check step status
        shell: bash
        run: |
          if [[ "${{ steps.tf_fmt.outcome }}" == "success" && "${{ steps.tf_lint.outcome }}" == "success" && "${{ steps.tf_scan.outcome }}" == "success" ]]; then
              echo "job_status=success" >> $GITHUB_ENV
          else
              echo "job_status=failure" >> $GITHUB_ENV
          fi

          # Update the individual checks
          tf_fmt=":white_check_mark: Passed" 
          tf_lint=":white_check_mark: Passed"
          tf_scan=":white_check_mark: Passed"
          [[ "${{ steps.tf_fmt.outcome }}" != "success" ]] && tf_fmt=":heavy_exclamation_mark: Failed"
          [[ "${{ steps.tf_lint.outcome }}" != "success" ]] && tf_lint=":heavy_exclamation_mark: Failed"
          [[ "${{ steps.tf_scan.outcome }}" != "success" ]] && tf_scan=":heavy_exclamation_mark: Failed"

          echo "tf_fmt=$tf_fmt" >> $GITHUB_ENV
          echo "tf_lint=$tf_lint" >> $GITHUB_ENV
          echo "tf_scan=$tf_scan" >> $GITHUB_ENV

      - name: Update check with result
        uses: UKHSA-Internal/devops-github-actions/.github/actions/github-status-check@main
        with:
          name: "terraform-checks"
          status: "completed"
          title: "Terraform code checks"
          summary: "Terraform code checks have completed"
          conclusion: "${{ env.job_status }}"
          check-run-id: ${{ steps.create_check.outputs.check-run-id }}
          details: |
            | Check              | Status              |
            | :----------------- | :-----------------: |
            | Terraform Format   |  ${{ env.tf_fmt }}  |
            | Terraform Linting  |  ${{ env.tf_lint }} |
            | Checkov Scan       |  ${{ env.tf_scan }} |

      - name: End of Workflow
        shell: bash
        if: always()
        run: |
          if [[ ${{ env.job_status }} == 'success' ]]; then
            exit 0
          else
            exit 1
          fi